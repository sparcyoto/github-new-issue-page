{"version":3,"file":"static/js/43.d4a0e823.chunk.js","mappings":"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","sources":["AppUtils/AppFunctions/dateFunctions.js","components/ErrorPage/index.js","components/Loader/index.js","pages/IssueDetail/state/constants.js","pages/IssueDetail/state/issueDetailsReducer.js","pages/IssueDetail/IssueDetailPage/Comment.js","pages/IssueDetail/state/actions.js","pages/IssueDetail/IssueDetailPage/index.js"],"sourcesContent":["// calculate time\nexport const getIssueCreatedTime = (date) => {\n  // create a new Date object from the input date\n  const updatedDate = new Date(date).getTime();\n\n  // get the current date\n  const currentDate = new Date().getTime();\n\n  // Calculate the time in milliseconds\n  const timeDiff = currentDate - updatedDate;\n\n  // Calculate the number of hours, days, weeks, and months that have passed\n  const minutes = Math.floor(timeDiff / (1000 * 60));\n  const hours = Math.floor(timeDiff / (1000 * 60 * 60));\n  const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\n  const weeks = Math.floor(timeDiff / (1000 * 60 * 60 * 24 * 7));\n  const months = Math.floor(timeDiff / (1000 * 60 * 60 * 24 * 30));\n  const options = { month: \"short\", day: \"numeric\", year: \"numeric\" }; //specifies the format of the date.\n  return minutes === 0\n    ? `now.`\n    : minutes < 60\n    ? `${minutes} minute${minutes === 1 ? \"\" : \"s\"} ago`\n    : hours < 24\n    ? `${hours} hour${hours === 1 ? \"\" : \"s\"} ago`\n    : days < 7\n    ? days === 1\n      ? \"yesterday\"\n      : `${days} days ago`\n    : weeks < 4\n    ? weeks === 1\n      ? \"last week\"\n      : ` ${weeks} weeks ago`\n    : months === 1\n    ? \"last month\"\n    : `on ${new Date(date).toLocaleDateString(\"en-US\", options)}`;\n};\n","import React from \"react\";\nimport \"./error.css\";\nconst ErrorPage = () => {\n  return <div className=\"error\">Error Loading Page Please Try Again!</div>;\n};\n\nexport default ErrorPage;\n","import React, { memo } from \"react\";\nimport \"./loader.css\";\nconst Loader = () => {\n  return (\n    <>\n      <div className=\"loader\"></div>\n    </>\n  );\n};\n\nexport default memo(Loader);\n","export const issueDetailsConstants = {\n  // get issue details\n  GET_ISSUE_DETAILS_REQUEST: \"GET_ISSUE_DETAILS_REQUEST\",\n  GET_ISSUE_DETAILS_SUCCESS: \"GET_ISSUE_DETAILS_SUCCESS\",\n  GET_ISSUE_DETAILS_FAIL: \"GET_ISSUE_DETAILS_FAIL\",\n\n  // get comments\n  GET_COMMENTS_REQUEST: \"GET_COMMENTS_REQUEST\",\n  GET_COMMENTS_SUCCESS: \"GET_COMMENTS_SUCCESS\",\n  GET_COMMENTS_FAIL: \"GET_COMMENTS_FAIL\",\n};\n","import { issueDetailsConstants } from \"./constants\";\n\n// initial state\nconst initialIssueDetailsState = {\n  loadingIssueDetails: false,\n  detailError: false,\n  issueDetails: [],\n  comments: [],\n};\nconst issueDetailsReducer = (state, action) => {\n  switch (action.type) {\n    //get issue details\n    case issueDetailsConstants.GET_ISSUE_DETAILS_REQUEST: {\n      return { ...state, loadingIssueDetails: true, detailError: false };\n    }\n    // get issue details success\n    case issueDetailsConstants.GET_ISSUE_DETAILS_SUCCESS: {\n      return {\n        ...state,\n        loadingIssueDetails: false,\n        detailError: false,\n        issueDetails: action?.payload?.issueDetails,\n        comments: action?.payload?.comments,\n      };\n    }\n    // get issue details fail\n    case issueDetailsConstants.GET_ISSUE_DETAILS_FAIL: {\n      return { ...state, loadingIssueDetails: false, detailError: true };\n    }\n    // return state\n    default:\n      return state;\n  }\n};\nexport { initialIssueDetailsState, issueDetailsReducer };\n","import React, { memo } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport { getIssueCreatedTime } from \"../../../AppUtils/AppFunctions/dateFunctions\";\nconst Comment = ({ issueDetails }) => {\n  return (\n    // comment container\n    <div className=\"comment__container\">\n      <div className=\"avatar\">\n        <img src={issueDetails?.user?.avatar_url} alt=\"Avatar\" loading=\"lazy\" />\n      </div>\n      <div className=\"comment__section\">\n        <div className=\"comment__header\">\n          <strong className=\"issue__author\">{issueDetails?.user?.login}</strong>\n          <span>{`commented ${getIssueCreatedTime(\n            issueDetails?.created_at\n          )}`}</span>\n        </div>\n\n        <div className=\"comment__body\">\n          <ReactMarkdown remarkPlugins={[gfm]}>\n            {/*replace is used remove comment from issue details body */}\n            {issueDetails?.body?.replace(/<!--[\\s\\S]*?-->/g, \"\")}\n          </ReactMarkdown>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Comment);\n","import { issueDetailsConstants } from \"./constants\";\n// get issue request\nexport const getIssueDetailsRequest = () => ({\n  type: issueDetailsConstants.GET_ISSUE_DETAILS_REQUEST,\n});\n// get issue success\nexport const getIssueDetailSuccess = (data) => ({\n  type: issueDetailsConstants.GET_ISSUE_DETAILS_SUCCESS,\n  payload: data,\n});\n// get issue fail\nexport const getIssueDetailsFail = () => ({\n  type: issueDetailsConstants.GET_ISSUE_DETAILS_FAIL,\n});\n","import axios from \"axios\";\nimport React, { useEffect, useReducer } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { issueDetailsConstants } from \"../state/constants\";\nimport {\n  initialIssueDetailsState,\n  issueDetailsReducer,\n} from \"../state/issueDetailsReducer\";\nimport \"./issueDetail.css\";\nimport Comment from \"./Comment\";\nimport {\n  getIssueDetailsFail,\n  getIssueDetailsRequest,\n  getIssueDetailSuccess,\n} from \"../state/actions\";\nimport Loader from \"../../../components/Loader\";\nimport ErrorPage from \"../../../components/ErrorPage\";\n\nconst IssueDetailPage = () => {\n  //define state of issue detail page\n  const [state, dispatch] = useReducer(\n    issueDetailsReducer,\n    initialIssueDetailsState\n  );\n  const { issueDetails, loadingIssueDetails, comments, detailError } = state;\n  // use the `useParams` hook here to access the dynamic pieces of the URL.\n  const { id } = useParams();\n\n  // get issue data\n  const handleGetIssueDetails = async () => {\n    dispatch(getIssueDetailsRequest());\n    try {\n      const { data } = await axios.get(\n        `https://api.github.com/repos/facebook/react/issues/${id}`\n      );\n      // fetch comments\n      const { data: comments } = await axios.get(data?.comments_url);\n      dispatch(\n        getIssueDetailSuccess({ issueDetails: data, comments: comments })\n      );\n    } catch (error) {\n      dispatch(getIssueDetailsFail());\n    }\n  };\n\n  //get issue details\n  useEffect(() => {\n    handleGetIssueDetails();\n  }, []);\n  return (\n    <>\n      {/* issue detail container */}\n      {loadingIssueDetails ? (\n        <Loader />\n      ) : detailError ? (\n        <ErrorPage />\n      ) : (\n        <div className=\"detail__container\">\n          <div className=\"detail__title--container\">\n            <span className=\"detail__title\">{issueDetails?.title}</span>\n            <span className=\"detail__issue--number\">\n              #{issueDetails?.number}\n            </span>\n          </div>\n          {/* comment section */}\n          <Comment issueDetails={issueDetails} />\n          {/* sub comments */}\n          {comments?.map((comment) => (\n            <Comment issueDetails={comment} key={comment?.id} />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default IssueDetailPage;\n"],"names":["getIssueCreatedTime","date","updatedDate","Date","getTime","timeDiff","minutes","Math","floor","hours","days","weeks","months","concat","toLocaleDateString","month","day","year","_jsx","className","children","Loader","_Fragment","memo","issueDetailsConstants","initialIssueDetailsState","loadingIssueDetails","detailError","issueDetails","comments","issueDetailsReducer","state","action","type","_objectSpread","_action$payload","_action$payload2","payload","Comment","_ref","_issueDetails$user","_issueDetails$user2","_issueDetails$body","_jsxs","src","user","avatar_url","alt","loading","login","created_at","ReactMarkdown","remarkPlugins","gfm","body","replace","getIssueDetailSuccess","data","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","id","useParams","handleGetIssueDetails","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","_yield$axios$get2","_comments","wrap","_context","prev","next","axios","sent","comments_url","t0","stop","apply","arguments","useEffect","ErrorPage","title","number","map","comment"],"sourceRoot":""}
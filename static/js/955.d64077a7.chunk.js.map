{"version":3,"file":"static/js/955.d64077a7.chunk.js","mappings":"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","sources":["AppUtils/AppFunctions/dateFunctions.js","components/ErrorPage/index.js","components/Loader/index.js","components/AppSearchBar/index.js","pages/Issue/IssuePage/IssuePageListing.js","pages/Issue/state/constants.js","pages/Issue/state/issuePageReducer.js","pages/Issue/state/actions.js","pages/Issue/IssuePage/index.js"],"sourcesContent":["// calculate time\nexport const getIssueCreatedTime = (date) => {\n  // create a new Date object from the input date\n  const updatedDate = new Date(date).getTime();\n\n  // get the current date\n  const currentDate = new Date().getTime();\n\n  // Calculate the time in milliseconds\n  const timeDiff = currentDate - updatedDate;\n\n  // Calculate the number of hours, days, weeks, and months that have passed\n  const minutes = Math.floor(timeDiff / (1000 * 60));\n  const hours = Math.floor(timeDiff / (1000 * 60 * 60));\n  const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));\n  const weeks = Math.floor(timeDiff / (1000 * 60 * 60 * 24 * 7));\n  const months = Math.floor(timeDiff / (1000 * 60 * 60 * 24 * 30));\n  const options = { month: \"short\", day: \"numeric\", year: \"numeric\" }; //specifies the format of the date.\n  return minutes === 0\n    ? `now.`\n    : minutes < 60\n    ? `${minutes} minute${minutes === 1 ? \"\" : \"s\"} ago`\n    : hours < 24\n    ? `${hours} hour${hours === 1 ? \"\" : \"s\"} ago`\n    : days < 7\n    ? days === 1\n      ? \"yesterday\"\n      : `${days} days ago`\n    : weeks < 4\n    ? weeks === 1\n      ? \"last week\"\n      : ` ${weeks} weeks ago`\n    : months === 1\n    ? \"last month\"\n    : `on ${new Date(date).toLocaleDateString(\"en-US\", options)}`;\n};\n","import React from \"react\";\nimport \"./error.css\";\nconst ErrorPage = () => {\n  return <div className=\"error\">Error Loading Page Please Try Again!</div>;\n};\n\nexport default ErrorPage;\n","import React, { memo } from \"react\";\nimport \"./loader.css\";\nconst Loader = () => {\n  return (\n    <>\n      <div className=\"loader\"></div>\n    </>\n  );\n};\n\nexport default memo(Loader);\n","import React, { memo } from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport \"./search.css\";\nconst AppSearchBar = ({ handleSearch }) => {\n  // set the user input value\n  const handleChange = ({ target: { value } }) => {\n    handleSearch(value);\n  };\n  return (\n    <>\n      <div className=\"search__container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search issues...\"\n          onChange={handleChange}\n        />\n        <FaSearch className=\"search__icon\" />\n      </div>\n    </>\n  );\n};\n\nexport default memo(AppSearchBar);\n","import React from \"react\";\nimport { TbCircleDot } from \"react-icons/tb\";\nimport { Link } from \"react-router-dom\";\nimport { getIssueCreatedTime } from \"../../../AppUtils/AppFunctions/dateFunctions\";\n\nconst IssuePageListing = ({ issues }) => {\n  // array of color to change the style of text color\n  const labelColor = [\"b60205\", \"9149d1\"];\n  return (\n    <>\n      {issues?.map((issue) => {\n        const {\n          id,\n          title,\n          labels,\n          number,\n          created_at,\n          comments,\n          user: { login },\n        } = issue;\n        return (\n          <div className=\"issue__details\" key={id}>\n            <TbCircleDot className=\"issue__svg\" />\n            <div>\n              <div className=\"title__container\">\n                {/* navigate to issues detail page */}\n                <div className=\"issue__title--container\">\n                  <Link to={`issues/${number}`}>\n                    <h1 className=\"issue__title\">{title}</h1>\n                  </Link>\n                </div>\n                {/* display labels */}\n                {labels?.map((label) => {\n                  return (\n                    <span\n                      key={label?.id}\n                      className=\"issue__status\"\n                      style={{\n                        backgroundColor: `#${label?.color}`,\n                        color: `${\n                          labelColor?.includes(label?.color) ? \"white\" : \"black\"\n                        }`,\n                      }}\n                    >\n                      {label?.name}\n                    </span>\n                  );\n                })}\n              </div>\n              <div className=\"issue__data\">\n                <span className=\"issue__number\">{`#${number}`}</span>\n                <span className=\"issue__author\">\n                  opened {getIssueCreatedTime(created_at)} by {login}\n                </span>\n              </div>\n              <div className=\"issue__comment\">\n                <span>Comments: {comments}</span>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default IssuePageListing;\n","export const issuePageConstants = {\n  // get issues constants\n  GET_ISSUE_REQUEST: \"GET_ISSUE_REQUEST\",\n  GET_ISSUE_SUCCESS: \"GET_ISSUE_SUCCESS\",\n  GET_ISSUE_FAIL: \"GET_ISSUE_FAIL\",\n  // update current page\n  UPDATE_CURRENT_PAGE: \"UPDATE_CURRENT_PAGE\",\n  // update query\n  UPDATE_QUERY: \"UPDATE_QUERY\",\n};\n","import { issuePageConstants } from \"./constants\";\n// initial state\nconst initialState = {\n  loadingIssue: false,\n  error: false,\n  issues: [],\n  currentPage: 0,\n  totalPages: 300,\n  postsPerPage: 30,\n  query: \"\",\n};\nconst issuePageReducer = (state, action) => {\n  switch (action.type) {\n    // get issues request\n    case issuePageConstants.GET_ISSUE_REQUEST: {\n      return { ...state, loadingIssue: true, error: false };\n    }\n    // get issue success\n    case issuePageConstants.GET_ISSUE_SUCCESS: {\n      return {\n        ...state,\n        loadingIssue: false,\n        error: false,\n        issues: [...state?.issues , ...action?.payload],\n      };\n    }\n    // get issue fail\n    case issuePageConstants.GET_ISSUE_FAIL: {\n      return { ...state, loadingIssue: false, error: true };\n    }\n    // update current page\n    case issuePageConstants.UPDATE_CURRENT_PAGE: {\n      return { ...state, currentPage: action?.payload };\n    }\n    // update query\n    case issuePageConstants.UPDATE_QUERY: {\n      return { ...state, query: action?.payload };\n    }\n    default:\n      return state;\n  }\n};\nexport { initialState, issuePageReducer };\n","import { issuePageConstants } from \"./constants\";\n// get issue request\nexport const getIssuesRequest = () => ({\n  type: issuePageConstants.GET_ISSUE_REQUEST,\n});\n// get issue success\nexport const getIssueSuccess = (data) => ({\n  type: issuePageConstants.GET_ISSUE_SUCCESS,\n  payload: data,\n});\n// get issue fail\nexport const getIssueFail = () => ({\n  type: issuePageConstants.GET_ISSUE_FAIL,\n});\n// update page\nexport const updateCurrentPage = (data) => ({\n  type: issuePageConstants.UPDATE_CURRENT_PAGE,\n  payload: data,\n});\n// update query\nexport const updateQuery = (data) => ({\n  type: issuePageConstants.UPDATE_QUERY,\n  payload: data,\n});\n","import React, { useCallback, useEffect, useReducer } from \"react\";\nimport { TbCircleDot } from \"react-icons/tb\";\nimport axios from \"axios\";\nimport InfinitScroll from 'react-infinite-scroll-component'\n\nimport AppSearchBar from \"../../../components/AppSearchBar\";\nimport Loader from \"../../../components/Loader\";\nimport Pagination from \"../../../components/Pagination\";\nimport IssuePageListing from \"./IssuePageListing\";\nimport ErrorPage from \"../../../components/ErrorPage\";\nimport { initialState, issuePageReducer } from \"../state/issuePageReducer\";\nimport {\n  getIssueFail,\n  getIssuesRequest,\n  getIssueSuccess,\n  updateCurrentPage,\n  updateQuery,\n} from \"../state/actions\";\nimport \"./issuePage.css\";\nconst IssueListingPage = () => {\n  //define state of issue listing page\n  const [state, dispatch] = useReducer(issuePageReducer, initialState);\n\n  const {\n    issues,\n    loadingIssue,\n    totalPages,\n    currentPage,\n    error,\n    query,\n    postsPerPage,\n  } = state;\n\n  // get issue data\n  const getIssues = async (currentPage) => {\n    if(loadingIssue) return;\n\n    dispatch(getIssuesRequest()); //dispatch request action\n    try {\n      const { data } = await axios.get(\n        `https://api.github.com/repos/facebook/react/issues?page=${\n          currentPage + 1\n        }`\n      );\n      dispatch(getIssueSuccess(data));\n      // dispatch(updateCurrentPage(currentPage));\n    } catch (error) {\n      dispatch(getIssueFail());\n    }\n  };\n\n  // provides a way to abort one or more DOM requests\n  const controller = new AbortController();\n\n  // get searched data\n  const getSearchedData = async (currentPage) => {\n    if(loadingIssue) return;\n    dispatch(getIssuesRequest());\n    try {\n      const { data } = await axios.get(\n        `https://api.github.com/search/issues?repo=facebook/react&q=${query}&page=${\n          currentPage + 1\n        }`,\n        {\n          signal: controller?.signal,\n        }\n      );\n      dispatch(getIssueSuccess(data?.items));\n    } catch (error) {\n      // if request is cancelled do not set error to true\n      error?.code === \"ERR_CANCELED\"\n        ? dispatch(getIssuesRequest())\n        : dispatch(getIssueFail());\n    }\n  };\n  useEffect(() => {\n    query !== \"\" ? getSearchedData(currentPage) : getIssues(currentPage); // call search data if query is not empty else call fetch issues\n    return () => controller.abort(); // abort() method on the controller to cancel the request.\n  }, [query, currentPage]);\n\n  // handle change page\n  const handleChangePage = useCallback(\n    (newPage) => {\n      dispatch(updateCurrentPage(newPage)); // dispatch action to update page\n    },\n    [dispatch]\n  );\n\n  // handle search\n  const handleSearch = useCallback(\n    (search) => {\n      dispatch(updateQuery(search)); // dispatch action to update query\n    },\n    [dispatch]\n  );\n  return (\n    <>\n      {/* search bar */}\n      <AppSearchBar handleSearch={handleSearch} />\n      <InfinitScroll\n        dataLength = {state?.issues?.length|| 10}\n        next = {()=>getIssues(currentPage)}\n        hasMore = {true}\n        loader={<h4>Loading ... </h4>}\n      >\n      <div className=\"issue__container\">\n        <div className=\"issue__header\">\n          <TbCircleDot className=\"issue__svg\" />\n          Issues\n        </div>\n\n        {/* display loader if loadingIssue is true else display issues data  and display error page if error is set to true*/}\n        {loadingIssue ? (\n          <Loader />\n        ) : error ? (\n          <ErrorPage />\n        ) : (\n          <IssuePageListing issues={issues} />\n        )}\n      </div>\n      </InfinitScroll>\n\n    </>\n  );\n};\n\nexport default IssueListingPage;\n"],"names":["getIssueCreatedTime","date","updatedDate","Date","getTime","timeDiff","minutes","Math","floor","hours","days","weeks","months","concat","toLocaleDateString","month","day","year","_jsx","className","children","Loader","_Fragment","memo","AppSearchBar","_ref","handleSearch","_jsxs","type","placeholder","onChange","_ref2","value","target","FaSearch","issues","labelColor","map","issue","id","title","labels","number","created_at","comments","login","user","TbCircleDot","Link","to","label","style","backgroundColor","color","includes","name","issuePageConstants","initialState","loadingIssue","error","currentPage","totalPages","postsPerPage","query","issuePageReducer","state","action","_objectSpread","_toConsumableArray","payload","getIssuesRequest","getIssueSuccess","data","getIssueFail","_state$issues","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","getIssues","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","wrap","_context","prev","next","abrupt","axios","sent","t0","stop","_x","apply","arguments","controller","AbortController","getSearchedData","_callee2","_yield$axios$get2","_context2","signal","items","code","_x2","useEffect","abort","useCallback","newPage","search","InfinitScroll","dataLength","length","hasMore","loader","ErrorPage","IssuePageListing"],"sourceRoot":""}